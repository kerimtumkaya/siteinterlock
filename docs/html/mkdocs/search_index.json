{
    "docs": [
        {
            "location": "/index.html",
            "text": "A novel approach to pose selection in protein-ligand docking based on graph theory.\n\n\nsiteinterlock\n is a Python package for selecting near-native protein-ligand docking poses based upon the hypothesis that interfacial rigidification of both the protein and ligand prove to be important characteristics of the native binding mode and are sensitive to the spatial coupling of interactions and bond-rotational degrees of freedom in the interface.\n\n\nThe \nsiteinterlock\n toolkit was developed in the \nProtein Structure Analysis & Design Laboratory\n at Michigan State University. For additional information on the theory behind the SiteInterlock project, please refer to the accompanying research publication:\n\n\n\n\nRaschka, Sebastian, Joseph Bemister-Buffington, and Leslie A. Kuhn 2016. \"Detecting the Native Ligand Orientation by Interfacial Rigidity: SiteInterlock.\" \nProteins: Structure, Function, and Bioinformatics\n XX (X). John Wiley & Sons : XXX-XX. doi:xx.xxxx/xxxxxxxx.\n\n\n\n\nThe following flowchart provides you with a quick overview of the SiteInterlock approach. Please read the \nInstallation Notes\n and \nDocumentation\n for more details on how to use this software package, and it is recommended the accompanying \nresearch article\n for details of the SiteInterlock hypothesis and theory.",
            "title": "Home"
        },
        {
            "location": "/installation/index.html",
            "text": "Installation\n\n\nThe \nsiteinterlock\n package is compatible with Python 2.7.x and Python 3.2 or newer; the package itself does not require external\ndependencies or libraries. If you don't already have Python installed on your system, you can find more information on how to obtain\nand install Python at \nhttps://www.python.org/downloads/\n.\n\n\nTo produce the input files that are required for the SiteInterlock analysis, you will need to have \nMSU ProFlex installed\n 1\n. MSU ProFlex (formerly called FIRST) predicts the rigid and flexible regions in a protein structure, given a Protein Data Bank (PDB) file, including polar hydrogen atoms. You can find more information about obtaining and installing ProFlex at \nhttp://kuhnlab.bmb.msu.edu/software/proflex/index.html\n.\n\n\nInstalling siteinterlock from source\n\n\nYou can obtain the latest, stable release of \nsiteinterlock\n from GitHub at \nhttps://github.com/psa-lab/siteinterlock/releases\n.\n\n\n\n\nAfter clicking on the \nSource code (zip)\n or \nSource code (tar.gz)\n download links, please navigate to your download folder and unpack the source code archive using your preferred archive-tool.\n\n\nNext, go into the unzipped \nsiteinterlock-master\n directory, and install the \nsiteinterlock\n package by executing \npython setup.py install\n (inside \nsiteinterlock-master\n).\n\n\nYou may verify your installation by opening a new terminal and executing the following command: \npython -c 'import siteinterlock; print(siteinterlock.__version__)'\n, which should print \n1.0.0\n.\n\n\nNow, you will be able to use the SiteInterlock scripts provided in the \nscripts/\n subdirectory from any location on your local drive.\n\n\n\n\n\n\n1 \nJacobs, D. J., Rader, A. J., Kuhn, L. A., & Thorpe, M. F. (2001). Protein flexibility predictions using graph theory. \nProteins: Structure, Function, and Bioinformatics\n, 44(2), 150-165.",
            "title": "Installation"
        },
        {
            "location": "/installation/index.html#installation",
            "text": "The  siteinterlock  package is compatible with Python 2.7.x and Python 3.2 or newer; the package itself does not require external\ndependencies or libraries. If you don't already have Python installed on your system, you can find more information on how to obtain\nand install Python at  https://www.python.org/downloads/ .  To produce the input files that are required for the SiteInterlock analysis, you will need to have  MSU ProFlex installed  1 . MSU ProFlex (formerly called FIRST) predicts the rigid and flexible regions in a protein structure, given a Protein Data Bank (PDB) file, including polar hydrogen atoms. You can find more information about obtaining and installing ProFlex at  http://kuhnlab.bmb.msu.edu/software/proflex/index.html .",
            "title": "Installation"
        },
        {
            "location": "/installation/index.html#installing-siteinterlock-from-source",
            "text": "You can obtain the latest, stable release of  siteinterlock  from GitHub at  https://github.com/psa-lab/siteinterlock/releases .   After clicking on the  Source code (zip)  or  Source code (tar.gz)  download links, please navigate to your download folder and unpack the source code archive using your preferred archive-tool.  Next, go into the unzipped  siteinterlock-master  directory, and install the  siteinterlock  package by executing  python setup.py install  (inside  siteinterlock-master ).  You may verify your installation by opening a new terminal and executing the following command:  python -c 'import siteinterlock; print(siteinterlock.__version__)' , which should print  1.0.0 .  Now, you will be able to use the SiteInterlock scripts provided in the  scripts/  subdirectory from any location on your local drive.    1  Jacobs, D. J., Rader, A. J., Kuhn, L. A., & Thorpe, M. F. (2001). Protein flexibility predictions using graph theory.  Proteins: Structure, Function, and Bioinformatics , 44(2), 150-165.",
            "title": "Installing siteinterlock from source"
        },
        {
            "location": "/user_guide/index.html",
            "text": "User Guide Overview\n\n\nThis guide shows you how to use \nsiteinterlock\n in a typical scoring and pose\nselection in a typical docking study. The examples used in this guide are based\non a small re-docking study of the protein-ligand crystal complex of\nmonofunctional chorismate mutase and prephenic acid (PDB code:\n\n1com\n\n[\n1\n]).\nThe files we will be working with in this tutorial are located in the\n\nexamples/\n subdirectory\n of the \nsiteinterlock\n package.   \n\n\nThe subsequent flowchart highlights a typical workflow of a re-docking study\nvia \nsiteinterlock\n, and this guide assumes that you already completed steps\n1-3 and prepared protein-ligand docking poses using your preferred docking\ntool; for example, \nAutoDock Vina\n [\n2\n].\nIn the following sections, we will only consider a representative subset of\ndocking poses of 1com for clarity when illustrating the use of the\n\nsiteinterlock\n package for near-native binding pose selection (steps 3-6).\nThese docking poses used in this guide were previously generated via\n\nOpenEye OMEGA2\n [\n3\n] and\n\nMSU SLIDE\n\n[\n4\n].\n\n\n\n\n\n\n\n\n1 - Organizing Protein Docking Poses as PDB files\n\n\nIn this first section, we will prepare our docking poses for rigidity\nanalysis in\n\nProFlex\n\n\n5\n. We recommend you to organize the docking poses for\nre-scoring in a directory structure similar to the one that is shown\nin the screenshot below.\n\n\n\n\nAs illustrated in the preceding figure, we will create a separate directory\nthat contains one docking pose each. These PDB files will later serve as\ninputs to ProFlex. Each input file should contain the protein structure in\n\nPDB-file format\n\nincluding the docked ligand.\n\nPlease make sure that the protein-ligand complexes in these PDB files are protonated\n,\nwhich is required by ProFlex. In addition, we need to prepare\na \"ligand-free\" structure of the protein, which we labeled \n1com_nolig\n.\nIf you have further questions about the required file format,\nplease take a look at the \"1com\" example files, which are located\nin the \nexamples/proflex_input/\n subdirectory.\n\n\n\n\n\n\n2 - Determining a Reasonable Energy Cut-Off for Hydrogen Bonds in ProFlex\n\n\nBefore we analyze the rigidity of the docking poses via ProFlex, we use\nHETHER (Hydrogen-bond Energy ThresHold Estimator for Rigidity analysis)\nto select the optimal hydrogen-bond energy value for ProFlex analysis.\nBased on the ligand-free crystal structure, HETHER determines which salt\nbridges and hydrogen bonds will be included in the atomic interaction network.\nFor more details about the HETHER algorithm, please refer to the SiteInterlock\nresearch publication [\n6\n]. Using HETHER can be understood as a\ncalibration step, since protein structures are being solved in different\nsolvents, at different temperatures and pressures.\nPlease note that \nwe use the ligand-free structure for the HETHER analysis\n,\nto represent the real-world case of a docking study where the protein-ligand\ncrystal complex may not be available.\n\n\nBefore we can run the HETHER analysis, though, we need to run ProFlex's\n'hydrogen-dilution' analysis;\nwe navigate to the \nexamples/proflex_input/1com_nolig\n\ndirectory and run ProFlex via the following command:\n\n\nproflex -h 1com_nolig.pdb\n\n\n\n\nWhen ProFlex prompts us with questions, we use the default options for\nanalyzing the rigidity of this structure. When the following analysis\nmenu comes up:\n\n\n\n\n\n    ANALYSIS MENU\n\n  What would you like to perform:\n\n    (1) Flexibility and rigidity analysis\n    (2) Hydrogen bond dilution\n\n\n\n\n\n\nwe enter \n2\n and hit the \n<Enter>\n button to select hydrogen bond\ndilution as the type of analysis. When the following next menu appears\n\n\n\n\n\n\nWhich hydrogen bond dilution analysis would you like?\n\n (1) Standard hydrogen bond dilution, removing weakest H-bonds, one at a time\n\n (2) Random dilution over all H-bonds.\n     NOTE: This option is *not* recommended;\n           It may be used to probe the influence of H-bond\n           density, as opposed to strength, on rigidity\n\n \n\n \n\n\n\nwe enter \n1\n and confirm via \n<Enter>\n, which will execute\na \"Hydrogen bond dilution analysis.\" When the analysis finishes successfully,\nwe can inspect the results of the dilution analysis by opening the post\nscript image file \n1com_nolig_h-bonds.ps\n that was created in the \n1com_nolig\n\ndirectory (Example output files are located in the\n  \nexamples/proflex_output/hbdilute-1com_nolig/\n subdirectory):\n\n\n\n\nFinally, we can use HETHER to select the most appropriate energy threshold\nfor the hydrogen-bond network to use with ProfFlex for SiteInterlock analysis.\nWe execute the \nhether.py\n script from \nsiteinterlock\n scripts directory and\nprovide two input files, the {add a line break\nhere so that the file name isn't split in the middle of a word}\n\n1com_nolig_proflexdataset\n file and the \ndecomp_list\n file, which were\nboth created via the hydrogen-dilution analysis. To run HETHER,\nwe execute the following command:\n\n\npython scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list\n\n\n\n\nAs a result, we should see the following output on our command line terminal:\n\n\n\n\n\n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T19:36:47\n#\n==============\nHETHER results\n==============\nSuggested energy threshold: -0.806 kcal/mol\nNumber of rigid clusters: 4\nRelative rigidity: 83.0%\n\n\n\n\n\n\nThe relative rigidity value measures the percentage of all C-alphas\nin the protein that are in rigid regions. To save this information for our\nrecords, we can copy this output it to a text or log file of choice.\nMore conveniently, we can use the  redirect operator \n>\n of our\nLinux/Unix shell to redirect outputs of siteinterlock scripts to files.\nFor example,\n\n\npython scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list\\\n > examples/proflex_output/1com_nolig/hether.log\n\n\n\n\nWe recommend using tee (if your shell environment supports it)\nso that you can show the siteinterlock script outputs on your terminal\nscreen (\nstdout\n) and also save it to a log file (\nredirect\n)\nwithout executing the same command twice:\n\n\npython scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list\\\n | tee examples/proflex_output/1com_nolig/hether.log\n\n\n\n\nAs we can see from the previous output, HETHER suggests an energy\nthreshold of \n-0.806 kcal/mol\n, which corresponds to the protein state\nthat is indicated by an black arrow in the following hydrogen-dilution\nplot figure:\n\n\n\n\nFor more information about hydrogen-bond dilution analysis, please refer the\nsupporting information section of the SiteInterlock research publication\n[\n6\n].\n\n\nThe last two lines of the \nhether.py\n output provide us with optional\ninformation. \n\nFor instance, \nNumber of rigid clusters: 4\n tells us that\nthere are 4 rigid clusters at the given energy threshold, and that the\nstructure has a relative rigidity\nvalue of 83%.\n\n\n\n\n\n\nOptional but Encouraged: Visualizing Rigid and Flexible Clusters in PyMOL\n\n\nIn this section, we will walk through visualizing the rigid cluster\ncomposition via ProFlex in \nPyMOL\n using\nthe energy threshold we determined in the previous section based\non the \nligand-free\n structure.  This is strongly encouraged\nbecause it will tell you whether the energy value selected by HETHER\nis appropriate, resulting in a mostly rigid main chain with some residual\nflexibility that will be sensitive to native-like ligand interactions.\nNow, instead of running a \"hydrogen-bond dilution analysis,\"\nwe will perform a \"flexibility and rigidity analysis\" via ProFlex,\nwhich runs ProFlex for a single energy threshold rather than for all\nthresholds.  Similar to our previous ProFlex run,\nwe start the analysis by executing\n\n\nproflex -h 1com_nolig.pdb\n\n\n\n\nThis time, when we are prompted to enter an energy cut-off,\nwe use the threshold suggested by HETHER instead of\nthe default setting and hit \n<Enter>\n:\n\n\n\n\n\nNumber of H-bonds remaining: 202\n\nNumber of H-phobic tethers remaining: 166\n\n         Filter on Hydrogen Bond Energy:\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    All current hydrogen bonds have energies between:\n        -9.8419 Kcal/Mol  to  0.0226 Kcal/Mol\n\n    Enter a maximum acceptable hydrogen bond energy (in Kcal/Mol)\n    (-1.0 is a reasonable cutoff in general): -0.806\n\n\n\n\n\n\nWhen the next menu comes up, we enter \n1\n and continue\nby confirming your choice via the \n<Enter>\n button:\n\n\n\n\n\nANALYSIS MENU\n\nWhat would you like to perform:\n\n(1) Flexibility and rigidity analysis\n(2) Hydrogen bond dilution\n\n\n\n\n\n\nAfter the flexibility analysis has completed, we should find\nthe following files in the \n1com_nolig\n directory:\n\n\n\n\nNext, we open the file \n1com_nolig_flex_0001.pdb\n in PyMOL.\nThis PDB file represents the protein structure after the ProFlex analysis,\nwhich we can use to visualize the predicted flexible, isostatic, and rigid\nclusters according to the following color scale:\n\n\n\n\nNow, we click on the \"File\" menu in PyMOL, select \"Run\" from the dropdown\nmenu, and open the \nscripts/pymol_proflex_color.pml\n.\n\n\n\n\nWe should now see the protein structure with its predicted flexible\n and rigid regions:\n\n\n\n\nIn this case, the energy level appears appropriate, resulting in a mostly\nrigid structure (dark blue to gray) with some flexible regions\n(yellow, orange and red).  If the protein instead appeared mostly flexible,\nit could be indicative of unresolvable (by SiteInterlock) problems in the\nstereochemical quality of the protein coordinates being analyzed; see the\ndiscussion about checking protein stereochemistry in the Rigidity Analysis\nsection of the Raschka et al. SiteInterlock paper in the References).\nAlternatively, in the rare case when the energy selected by HETHER is slightly\ntoo high, resulting in excessive flexibility, a less negative energy threshold\ncould be manually selected based on viewing the hydrogen-bond dilution plot\nfrom ProFlex, as described in section 2 above.\n\n\n\n\n\n\n3 - Analyzing Docking Poses via ProFlex\n\n\nAfter we have computed a reasonable hydrogen-bond cut-off based on the\n\nligand-free\n protein structure in section 2, we can use this\nsuggested cut-off value for our ProFlex analysis of the docking poses.\nProFlex requires additional information about hydrogen-donor and acceptor\natoms for non-protein atoms. If you used MSU SLIDE for docking,\n\nsiteinterlock\n includes a script, \nslide_propmap.py\n, to obtain this\ninformation from SLIDE's .pts (interaction points) file.\n\n\nFor instance, you can provide a MOL2 file of the ligand,\nprephenic acid (shown below):\n\n\n\n\nand the .pts file of the docked ligand to \nslide-propmap.py\n:\n\n\npython scripts/slide_propmap.py \\\n--input1 examples/slide-propmap/1com_crystal.mol2 \\\n--input2 examples/slide-propmap/1com_0.pts\n\n\n\n\nThe resulting output in this case should appear as follows:\n\n\n\n\n\n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T20:15:54\n#\n================\nPROPMAP results\n================\nC1 --> hydrophobic contact\nC3 --> hydrophobic contact\nC5 --> hydrophobic contact\nC8 --> hydrophobic contact\nO1 --> b [H-bond Donor and/or Acceptor]\nO2 --> a [H-bond Acceptor]\nO3 --> a [H-bond Acceptor]\nO4 --> a [H-bond Acceptor]\nO5 --> a [H-bond Acceptor]\nO6 --> a [H-bond Acceptor]\n\n\n\n\n\n\n\nIf you didn't use SLIDE for docking and don't have a chemistry-related\nbackground, we recommend you to either use a different tool to obtain\nthe required hydrogen-bond donor and acceptor information for ligand\natoms or consult with an organic chemist.\n\n\nAfter we acquired the information about the ligand's hydrogen-bond donor\nand acceptor atoms, we will run the ProFlex flexibility analysis on each\nof the docking poses. For instance, to run the ProFlex analysis on the\ncrystal structure in \nexamples/proflex_input/proflex_input/1com_crystal\n,\nexecute \nproflex -h 1com_crystal_pflex_in.pdb\n in the respective directory.\nWhen we are prompted to enter donor and acceptor information,\nwe provide the above information from PropMap, as shown in the example below:\n\n\n\n\n\n---------------------------------------------------------\n    Identification of H-bond Donors, Acceptors etc.\n\n    (d) H-bond Donor\n    (a) H-bond Acceptor\n    (b) Both H-bond Donor and H-bond Acceptor\n    (c) Charged Donor\n    (e) Charged Acceptor\n    (n) None\n---------------------------------------------------------\n    Enter (a,b,c,d,e or n) for the following atoms.\n\n     Atom#  Atom  Res    Res#    Chain\n     3755    O1   \n<\n0>       1          Enter (a,b,c,d,e or n): b\n     3757    O2   \n<\n0>       1          Enter (a,b,c,d,e or n): a\n     3759    O3   \n<\n0>       1          Enter (a,b,c,d,e or n): a\n     3761    O4   \n<\n0>       1          Enter (a,b,c,d,e or n): a\n     3763    O5   \n<\n0>       1          Enter (a,b,c,d,e or n): a\n     3765    O6   \n<\n0>       1          Enter (a,b,c,d,e or n): a\n\n\n\n\n\n\n\nWhen we are prompted to enter an energy threshold for hydrogen bonds,\nwe provide the value that we obtained from the ligand-free structure\n(\n1com_nolig\n) that we computed via HETHER in section 2.\n\nWe then run the flexibility analysis by entering \n1\n\nwhen the following ProFlex prompt comes up:\n\n\n\n\n\n\n    ANALYSIS MENU\n\n  What would you like to perform:\n\n    (1) Flexibility and rigidity analysis\n    (2) Hydrogen bond dilution\n\n\n\n\n\n\n\n\nAfter running the ProFlex flexibility analysis individually\n(in separate ProFlex runs) on each of the 6 docking poses and\nthe crystal structure, we should now have 7 ProFlex output PDB\nfiles that we can collect in a single directory for convenience\n\n(example files are provided in\n  \nexamples/proflex_output/all-docking-poses-pdbs\n):\n\n\n\n\nOptionally, we can visualize the results of the flexibility analysis\nof the protein with ligand by following the instructions described\nin the previous section\n\nOptional but Encouraged: Visualizing Rigid and Flexible Clusters in PyMOL\n.\nThe flexible and rigid clusters of the protein-ligand structure\nin \n\n\n1com_0057_pflex_in_flex_0001.pdb\n are shown as an example below:\n\n\n\n\nBlue regions represent rigid parts of the structure, gray regions\nrepresent isostatic (just barely rigid) parts, and yellow, orange,\nand red regions indicate increasingly flexible regions\naccording to the following color scale:\n\n\n\n\nOptional: Visualizing H-bond Interactions between Proteins and Ligands\n\n\nWe can use one of the \nsiteinterlock\n utilities to visualize the\nhydrogen bond interactions in the current docking pose as deduced\nvia ProFlex. First, we need to install the \npymol_bondvis-plugin.py\n\nprovided in the \nsiteinterlock\n's \nscripts\n directory. As shown in\nthe two figures below, we click on the \"Manage Plugins\"\n(if you have it enabled in your PyMOL version) and select the plugin\nscript mentioned above to install the plugin.\n\n\n\n\n\n\nThen, we need to restart the PyMOL application.\n\n\nTo obtain the relevant hydrogen-bond information\nthat the above-mentioned plugin requires, run\n\n\npython scripts/proflex_bondviz.py \\\n-i examples/proflex_output/1com_0057/1com_0057_pflex_in_proflexdataset \\\n-b hbonds\n\n\n\n\nwhich will produce the following output on your command line screen:\n\n\n\n\n\nAtom#1 Atom#2\n1951 3761\n1949 3755\n3269 3759\n3566 3755\n3266 3761\n1185 3765\n\n\n\n\n\n\n\nand we save these results as a text file, for example, \nhbonds.txt\n.\n\n\nNow, we reopen PyMOL, rename \n\n\n1com_0057_pflex_in_proflexdataset\n to \n1com_0057_pflex_in_proflexdataset.pdb\n\nand open this PDB file in\nthe current PyMOL session. Next, select the \nBondViz\n plugin\nfrom PyMOL's plugin menu, and select the \nhbonds.txt\n\nfile that was just created:\n\n\n\n\nThen, open the PDB file that we previously used as input to ProFlex,\nfor example,\n\n\n1com_0057_pflex_in.pdb\n, in order to visualize the\nhydrogen-bond network between the protein and the docked ligand:\n\n\n\n\n\n\n\n\n\n\n4 - SiteInterlock Scoring and Pose Selection\n\n\nAfter working through the preparation steps described in sections 1-3,\nwe can use the ProFlex output files to compute the SiteInterlock\nranking scores for pose selection.\n\n\nFirst, we need to extract substructures of the protein-ligand complexes\nthat contain the atoms of the ligand itself and all protein atoms within\na 9-Angstrom radius of the ligand's heavy atoms. To accomplish this,\nwe execute the \nget-substructures.py\n\n script from siteinterlock's \nscript\n directory as follows:\n\n\npython scripts/get-substructures.py \\\n--input examples/proflex_output/all-docking-poses-pdbs/ \\\n--output examples/proflex_output/all-docking-poses-pdbs-9A/ \\\n--ligand \"<0>,,1\" \\\n--apply_to_dir\n\n\n\n\nwhere the directory \nexamples/proflex_output/all-docking-poses-pdbs/\n\ncontains the ProFlex output PDB files, as shown in the screenshot at\nthe end of section 3. Via the \n--ligand\n flag, we specify the residue\nname, chain ID, and residue number of the docked ligand in the PDB file.\n\n\nIn this particular case (due to a ligand processing tool we used),\nthe 3-letter ligand residue name for the prephenic acid was assigned as <0>\nin the pdb file. (More typically, prephenic acid would have the ligand name\nPRE in a PDB file; see http://ligand-expo.rcsb.org). The input format for\nthe \n--ligand\n format is \nResidueName,ChainID,ResidueNumber\n. However,\nin this particular case, (again, due to a ligand processing tool we used)\ndoes not have a chain ID assigned so that we leave the \nChainID\n value\nempty. For example, if our ligand of interested was assigned the\nchain ID \"A\", we would have written\n\n\n--ligand \"<0>,A,1\"\n.\n\n\nFinally, via the \n--apply_to_dir\n flag, we specify that we want to apply\nthe \nscripts/get-substructures.py\n to all structures in the input directory\nso that we don't have to run the same script multiple times -- for instance,\nrunning it on each individual PDB file.\n\n\nAfter running the script as described above, we should now find the following\nfiles in the specified output directory:\n\n\n\n\nWhen we open these files in PyMOL, we should see the ligand and the\nrespective 9 Angstrom substructure of the protein -- the protein atoms\nthat fall within 9 Angstrom of the ligand's heavy atoms:\n\n\n\n\nThis is another excellent validation step to do to make sure that the\nright binding site region of the protein has been selected for the ligand\nof interest. After these substructures have been obtained, run the\n\nsiteinterlock-score.py\n script providing the substructure directory as input:\n\n\npython scripts/siteinterlock-score.py \\\n-i examples/proflex_output/all-docking-poses-pdbs-9A/\n\n\n\n\nAs a result, we should now see the following SiteInterlock scores on\nyour command line terminal:\n\n\n\n\n\n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T21:56:56\n#\n# ==============================\n# SiteInterlock Scoring Results\n# ==============================\nFilename,SiteInterlock_Score\n1com_0057_pflex_in_flex_0001.pdb,-1.094\n1com_crystal_pflex_in_flex_0001.pdb,-1.053\n1com_0140_pflex_in_flex_0001.pdb,-0.357\n1com_0058_pflex_in_flex_0001.pdb,-0.087\n1com_0119_pflex_in_flex_0001.pdb,-0.070\n1com_1_0066_pflex_in_flex_0001.pdb,0.776\n1com_0130_pflex_in_flex_0001.pdb,1.885\n\n\n\n\n\n\n\nThese results are sorted by ascending order, and the \nlowest, most negative\nvalue represents the best prediction.\n Please also note that the\nSiteInterlock score is a score for ranking and pose selection. Due to the\nnormalization procedure that is required for combining protein and ligand\ninformation, the absolute values (\nnot their relative ranking order\n) of\nthe scores depend on the number of docking poses.\n\n\nSince this tutorial focuses on a protein with a crystallographically determined\norientation of the ligand, we can compare the positional accuracy of the\nSiteInterlock-selected pose with the crystallographic pose.  We do this by\ncomputing the root mean square deviation (RMSD) of atomic positions between\neach docking pose of prephenic acid and the crystal pose, \n1com_crystal\n.\nIn this example we performed the RMSD calculation using the \nrmsd\n module of\nthe OEChem Toolkit (OpenEye Scientific Software, Santa Fe, NM;\nhttp://www.eyesopen.com). The following figure shows SiteInterlock scores\nof the docking poses plotted as a function of their RMSD values relative to\nthe crystallographic pose. The plot indicates that the docking with the\nmost negative SiteInterlock score has a low (good) RMSD value of 0.4 A\nrelative to the correct, crystallographic position (as expected), that\nthe crystallographic binding pose has a very similar, favorable\nSiteInterlock score, and that higher-RMSD binding poses typically\nhave higher/worse SiteInterlock scores.\n\n\n\n\nWe hope you find SiteInterlock useful in your own research!\n\n\n\n\n\n\nReferences\n\n\n\n\nChook, Y. M., Gray, J. V., Ke, H., & Lipscomb, W. N. (1994).\nThe monofunctional chorismate mutase from Bacillus subtilis:\nstructure determination of chorismate mutase and its complexes\nwith a transition state analog and prephenate, and implications for the\nmechanism of the enzymatic reaction.\n\nJournal of molecular biology\n, 240(5), 476-500.\n\n\nHawkins, P. C., Skillman, A. G., Warren, G. L., Ellingson,\nB. A., & Stahl, M. T. (2010). Conformer generation with OMEGA:\nalgorithm and validation using high quality structures from the Protein\nDatabank and Cambridge Structural Database. \nJournal of chemical information\nand modeling\n, 50(4), 572-584.\n\n\nTrott, O., & Olson, A. J. (2010). AutoDock Vina: improving the speed\nand accuracy of docking with a new scoring function, efficient optimization,\nand multithreading. \nJournal of computational chemistry\n, 31(2), 455-461.\n\n\nZavodszky, M. I., & Kuhn, L. A. (2005). Side\u2010chain flexibility in\nprotein\u2013ligand binding: The minimal rotation hypothesis.\n\nProtein Science\n, 14(4), 1104-1114.\n\n\nJacobs, D. J., Rader, A. J., Kuhn, L. A., & Thorpe, M. F. (2001).\nProtein flexibility predictions using graph theory. \nProteins: Structure,\nFunction, and Bioinformatics\n, 44(2), 150-165.\n\n\nRaschka, S., Bemister-Buffington, J., & Kuhn, L. A. (2016).\n\"Detecting the Native Ligand Orientation by Interfacial\nRigidity: SiteInterlock.\" \nProteins: Structure, Function, and Bioinformatics\n,\n85 (10).",
            "title": "User Guide"
        },
        {
            "location": "/user_guide/index.html#user-guide-overview",
            "text": "This guide shows you how to use  siteinterlock  in a typical scoring and pose\nselection in a typical docking study. The examples used in this guide are based\non a small re-docking study of the protein-ligand crystal complex of\nmonofunctional chorismate mutase and prephenic acid (PDB code: 1com \n[ 1 ]).\nThe files we will be working with in this tutorial are located in the examples/  subdirectory  of the  siteinterlock  package.     The subsequent flowchart highlights a typical workflow of a re-docking study\nvia  siteinterlock , and this guide assumes that you already completed steps\n1-3 and prepared protein-ligand docking poses using your preferred docking\ntool; for example,  AutoDock Vina  [ 2 ].\nIn the following sections, we will only consider a representative subset of\ndocking poses of 1com for clarity when illustrating the use of the siteinterlock  package for near-native binding pose selection (steps 3-6).\nThese docking poses used in this guide were previously generated via OpenEye OMEGA2  [ 3 ] and MSU SLIDE \n[ 4 ].",
            "title": "User Guide Overview"
        },
        {
            "location": "/user_guide/index.html#1-organizing-protein-docking-poses-as-pdb-files",
            "text": "In this first section, we will prepare our docking poses for rigidity\nanalysis in ProFlex  5 . We recommend you to organize the docking poses for\nre-scoring in a directory structure similar to the one that is shown\nin the screenshot below.   As illustrated in the preceding figure, we will create a separate directory\nthat contains one docking pose each. These PDB files will later serve as\ninputs to ProFlex. Each input file should contain the protein structure in PDB-file format \nincluding the docked ligand. Please make sure that the protein-ligand complexes in these PDB files are protonated ,\nwhich is required by ProFlex. In addition, we need to prepare\na \"ligand-free\" structure of the protein, which we labeled  1com_nolig .\nIf you have further questions about the required file format,\nplease take a look at the \"1com\" example files, which are located\nin the  examples/proflex_input/  subdirectory.",
            "title": "1 - Organizing Protein Docking Poses as PDB files"
        },
        {
            "location": "/user_guide/index.html#2-determining-a-reasonable-energy-cut-off-for-hydrogen-bonds-in-proflex",
            "text": "Before we analyze the rigidity of the docking poses via ProFlex, we use\nHETHER (Hydrogen-bond Energy ThresHold Estimator for Rigidity analysis)\nto select the optimal hydrogen-bond energy value for ProFlex analysis.\nBased on the ligand-free crystal structure, HETHER determines which salt\nbridges and hydrogen bonds will be included in the atomic interaction network.\nFor more details about the HETHER algorithm, please refer to the SiteInterlock\nresearch publication [ 6 ]. Using HETHER can be understood as a\ncalibration step, since protein structures are being solved in different\nsolvents, at different temperatures and pressures.\nPlease note that  we use the ligand-free structure for the HETHER analysis ,\nto represent the real-world case of a docking study where the protein-ligand\ncrystal complex may not be available.  Before we can run the HETHER analysis, though, we need to run ProFlex's\n'hydrogen-dilution' analysis;\nwe navigate to the  examples/proflex_input/1com_nolig \ndirectory and run ProFlex via the following command:  proflex -h 1com_nolig.pdb  When ProFlex prompts us with questions, we use the default options for\nanalyzing the rigidity of this structure. When the following analysis\nmenu comes up:   \n    ANALYSIS MENU\n\n  What would you like to perform:\n\n    (1) Flexibility and rigidity analysis\n    (2) Hydrogen bond dilution   we enter  2  and hit the  <Enter>  button to select hydrogen bond\ndilution as the type of analysis. When the following next menu appears   \n\nWhich hydrogen bond dilution analysis would you like?\n\n (1) Standard hydrogen bond dilution, removing weakest H-bonds, one at a time\n\n (2) Random dilution over all H-bonds.\n     NOTE: This option is *not* recommended;\n           It may be used to probe the influence of H-bond\n           density, as opposed to strength, on rigidity\n\n  \n   we enter  1  and confirm via  <Enter> , which will execute\na \"Hydrogen bond dilution analysis.\" When the analysis finishes successfully,\nwe can inspect the results of the dilution analysis by opening the post\nscript image file  1com_nolig_h-bonds.ps  that was created in the  1com_nolig \ndirectory (Example output files are located in the\n   examples/proflex_output/hbdilute-1com_nolig/  subdirectory):   Finally, we can use HETHER to select the most appropriate energy threshold\nfor the hydrogen-bond network to use with ProfFlex for SiteInterlock analysis.\nWe execute the  hether.py  script from  siteinterlock  scripts directory and\nprovide two input files, the {add a line break\nhere so that the file name isn't split in the middle of a word} 1com_nolig_proflexdataset  file and the  decomp_list  file, which were\nboth created via the hydrogen-dilution analysis. To run HETHER,\nwe execute the following command:  python scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list  As a result, we should see the following output on our command line terminal:   \n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T19:36:47\n#\n==============\nHETHER results\n==============\nSuggested energy threshold: -0.806 kcal/mol\nNumber of rigid clusters: 4\nRelative rigidity: 83.0%   The relative rigidity value measures the percentage of all C-alphas\nin the protein that are in rigid regions. To save this information for our\nrecords, we can copy this output it to a text or log file of choice.\nMore conveniently, we can use the  redirect operator  >  of our\nLinux/Unix shell to redirect outputs of siteinterlock scripts to files.\nFor example,  python scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list\\\n > examples/proflex_output/1com_nolig/hether.log  We recommend using tee (if your shell environment supports it)\nso that you can show the siteinterlock script outputs on your terminal\nscreen ( stdout ) and also save it to a log file ( redirect )\nwithout executing the same command twice:  python scripts/proflex_hether.py \\\n --input1 examples/proflex_output/1com_nolig/1com_nolig_proflexdataset \\\n --input2 examples/proflex_output/1com_nolig/decomp_list\\\n | tee examples/proflex_output/1com_nolig/hether.log  As we can see from the previous output, HETHER suggests an energy\nthreshold of  -0.806 kcal/mol , which corresponds to the protein state\nthat is indicated by an black arrow in the following hydrogen-dilution\nplot figure:   For more information about hydrogen-bond dilution analysis, please refer the\nsupporting information section of the SiteInterlock research publication\n[ 6 ].  The last two lines of the  hether.py  output provide us with optional\ninformation.  \nFor instance,  Number of rigid clusters: 4  tells us that\nthere are 4 rigid clusters at the given energy threshold, and that the\nstructure has a relative rigidity\nvalue of 83%.",
            "title": "2 - Determining a Reasonable Energy Cut-Off for Hydrogen Bonds in ProFlex"
        },
        {
            "location": "/user_guide/index.html#optional-but-encouraged-visualizing-rigid-and-flexible-clusters-in-pymol",
            "text": "In this section, we will walk through visualizing the rigid cluster\ncomposition via ProFlex in  PyMOL  using\nthe energy threshold we determined in the previous section based\non the  ligand-free  structure.  This is strongly encouraged\nbecause it will tell you whether the energy value selected by HETHER\nis appropriate, resulting in a mostly rigid main chain with some residual\nflexibility that will be sensitive to native-like ligand interactions.\nNow, instead of running a \"hydrogen-bond dilution analysis,\"\nwe will perform a \"flexibility and rigidity analysis\" via ProFlex,\nwhich runs ProFlex for a single energy threshold rather than for all\nthresholds.  Similar to our previous ProFlex run,\nwe start the analysis by executing  proflex -h 1com_nolig.pdb  This time, when we are prompted to enter an energy cut-off,\nwe use the threshold suggested by HETHER instead of\nthe default setting and hit  <Enter> :   \nNumber of H-bonds remaining: 202\n\nNumber of H-phobic tethers remaining: 166\n\n         Filter on Hydrogen Bond Energy:\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    All current hydrogen bonds have energies between:\n        -9.8419 Kcal/Mol  to  0.0226 Kcal/Mol\n\n    Enter a maximum acceptable hydrogen bond energy (in Kcal/Mol)\n    (-1.0 is a reasonable cutoff in general): -0.806   When the next menu comes up, we enter  1  and continue\nby confirming your choice via the  <Enter>  button:   \nANALYSIS MENU\n\nWhat would you like to perform:\n\n(1) Flexibility and rigidity analysis\n(2) Hydrogen bond dilution   After the flexibility analysis has completed, we should find\nthe following files in the  1com_nolig  directory:   Next, we open the file  1com_nolig_flex_0001.pdb  in PyMOL.\nThis PDB file represents the protein structure after the ProFlex analysis,\nwhich we can use to visualize the predicted flexible, isostatic, and rigid\nclusters according to the following color scale:   Now, we click on the \"File\" menu in PyMOL, select \"Run\" from the dropdown\nmenu, and open the  scripts/pymol_proflex_color.pml .   We should now see the protein structure with its predicted flexible\n and rigid regions:   In this case, the energy level appears appropriate, resulting in a mostly\nrigid structure (dark blue to gray) with some flexible regions\n(yellow, orange and red).  If the protein instead appeared mostly flexible,\nit could be indicative of unresolvable (by SiteInterlock) problems in the\nstereochemical quality of the protein coordinates being analyzed; see the\ndiscussion about checking protein stereochemistry in the Rigidity Analysis\nsection of the Raschka et al. SiteInterlock paper in the References).\nAlternatively, in the rare case when the energy selected by HETHER is slightly\ntoo high, resulting in excessive flexibility, a less negative energy threshold\ncould be manually selected based on viewing the hydrogen-bond dilution plot\nfrom ProFlex, as described in section 2 above.",
            "title": "Optional but Encouraged: Visualizing Rigid and Flexible Clusters in PyMOL"
        },
        {
            "location": "/user_guide/index.html#3-analyzing-docking-poses-via-proflex",
            "text": "After we have computed a reasonable hydrogen-bond cut-off based on the ligand-free  protein structure in section 2, we can use this\nsuggested cut-off value for our ProFlex analysis of the docking poses.\nProFlex requires additional information about hydrogen-donor and acceptor\natoms for non-protein atoms. If you used MSU SLIDE for docking, siteinterlock  includes a script,  slide_propmap.py , to obtain this\ninformation from SLIDE's .pts (interaction points) file.  For instance, you can provide a MOL2 file of the ligand,\nprephenic acid (shown below):   and the .pts file of the docked ligand to  slide-propmap.py :  python scripts/slide_propmap.py \\\n--input1 examples/slide-propmap/1com_crystal.mol2 \\\n--input2 examples/slide-propmap/1com_0.pts  The resulting output in this case should appear as follows:   \n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T20:15:54\n#\n================\nPROPMAP results\n================\nC1 --> hydrophobic contact\nC3 --> hydrophobic contact\nC5 --> hydrophobic contact\nC8 --> hydrophobic contact\nO1 --> b [H-bond Donor and/or Acceptor]\nO2 --> a [H-bond Acceptor]\nO3 --> a [H-bond Acceptor]\nO4 --> a [H-bond Acceptor]\nO5 --> a [H-bond Acceptor]\nO6 --> a [H-bond Acceptor]   If you didn't use SLIDE for docking and don't have a chemistry-related\nbackground, we recommend you to either use a different tool to obtain\nthe required hydrogen-bond donor and acceptor information for ligand\natoms or consult with an organic chemist.  After we acquired the information about the ligand's hydrogen-bond donor\nand acceptor atoms, we will run the ProFlex flexibility analysis on each\nof the docking poses. For instance, to run the ProFlex analysis on the\ncrystal structure in  examples/proflex_input/proflex_input/1com_crystal ,\nexecute  proflex -h 1com_crystal_pflex_in.pdb  in the respective directory.\nWhen we are prompted to enter donor and acceptor information,\nwe provide the above information from PropMap, as shown in the example below:   \n---------------------------------------------------------\n    Identification of H-bond Donors, Acceptors etc.\n\n    (d) H-bond Donor\n    (a) H-bond Acceptor\n    (b) Both H-bond Donor and H-bond Acceptor\n    (c) Charged Donor\n    (e) Charged Acceptor\n    (n) None\n---------------------------------------------------------\n    Enter (a,b,c,d,e or n) for the following atoms.\n\n     Atom#  Atom  Res    Res#    Chain\n     3755    O1    < 0>       1          Enter (a,b,c,d,e or n): b\n     3757    O2    < 0>       1          Enter (a,b,c,d,e or n): a\n     3759    O3    < 0>       1          Enter (a,b,c,d,e or n): a\n     3761    O4    < 0>       1          Enter (a,b,c,d,e or n): a\n     3763    O5    < 0>       1          Enter (a,b,c,d,e or n): a\n     3765    O6    < 0>       1          Enter (a,b,c,d,e or n): a   When we are prompted to enter an energy threshold for hydrogen bonds,\nwe provide the value that we obtained from the ligand-free structure\n( 1com_nolig ) that we computed via HETHER in section 2. \nWe then run the flexibility analysis by entering  1 \nwhen the following ProFlex prompt comes up:   \n\n    ANALYSIS MENU\n\n  What would you like to perform:\n\n    (1) Flexibility and rigidity analysis\n    (2) Hydrogen bond dilution   After running the ProFlex flexibility analysis individually\n(in separate ProFlex runs) on each of the 6 docking poses and\nthe crystal structure, we should now have 7 ProFlex output PDB\nfiles that we can collect in a single directory for convenience \n(example files are provided in\n   examples/proflex_output/all-docking-poses-pdbs ):   Optionally, we can visualize the results of the flexibility analysis\nof the protein with ligand by following the instructions described\nin the previous section Optional but Encouraged: Visualizing Rigid and Flexible Clusters in PyMOL .\nThe flexible and rigid clusters of the protein-ligand structure\nin   1com_0057_pflex_in_flex_0001.pdb  are shown as an example below:   Blue regions represent rigid parts of the structure, gray regions\nrepresent isostatic (just barely rigid) parts, and yellow, orange,\nand red regions indicate increasingly flexible regions\naccording to the following color scale:",
            "title": "3 - Analyzing Docking Poses via ProFlex"
        },
        {
            "location": "/user_guide/index.html#optional-visualizing-h-bond-interactions-between-proteins-and-ligands",
            "text": "We can use one of the  siteinterlock  utilities to visualize the\nhydrogen bond interactions in the current docking pose as deduced\nvia ProFlex. First, we need to install the  pymol_bondvis-plugin.py \nprovided in the  siteinterlock 's  scripts  directory. As shown in\nthe two figures below, we click on the \"Manage Plugins\"\n(if you have it enabled in your PyMOL version) and select the plugin\nscript mentioned above to install the plugin.    Then, we need to restart the PyMOL application.  To obtain the relevant hydrogen-bond information\nthat the above-mentioned plugin requires, run  python scripts/proflex_bondviz.py \\\n-i examples/proflex_output/1com_0057/1com_0057_pflex_in_proflexdataset \\\n-b hbonds  which will produce the following output on your command line screen:   \nAtom#1 Atom#2\n1951 3761\n1949 3755\n3269 3759\n3566 3755\n3266 3761\n1185 3765   and we save these results as a text file, for example,  hbonds.txt .  Now, we reopen PyMOL, rename   1com_0057_pflex_in_proflexdataset  to  1com_0057_pflex_in_proflexdataset.pdb \nand open this PDB file in\nthe current PyMOL session. Next, select the  BondViz  plugin\nfrom PyMOL's plugin menu, and select the  hbonds.txt \nfile that was just created:   Then, open the PDB file that we previously used as input to ProFlex,\nfor example,  1com_0057_pflex_in.pdb , in order to visualize the\nhydrogen-bond network between the protein and the docked ligand:",
            "title": "Optional: Visualizing H-bond Interactions between Proteins and Ligands"
        },
        {
            "location": "/user_guide/index.html#4-siteinterlock-scoring-and-pose-selection",
            "text": "After working through the preparation steps described in sections 1-3,\nwe can use the ProFlex output files to compute the SiteInterlock\nranking scores for pose selection.  First, we need to extract substructures of the protein-ligand complexes\nthat contain the atoms of the ligand itself and all protein atoms within\na 9-Angstrom radius of the ligand's heavy atoms. To accomplish this,\nwe execute the  get-substructures.py \n script from siteinterlock's  script  directory as follows:  python scripts/get-substructures.py \\\n--input examples/proflex_output/all-docking-poses-pdbs/ \\\n--output examples/proflex_output/all-docking-poses-pdbs-9A/ \\\n--ligand \"<0>,,1\" \\\n--apply_to_dir  where the directory  examples/proflex_output/all-docking-poses-pdbs/ \ncontains the ProFlex output PDB files, as shown in the screenshot at\nthe end of section 3. Via the  --ligand  flag, we specify the residue\nname, chain ID, and residue number of the docked ligand in the PDB file.  In this particular case (due to a ligand processing tool we used),\nthe 3-letter ligand residue name for the prephenic acid was assigned as <0>\nin the pdb file. (More typically, prephenic acid would have the ligand name\nPRE in a PDB file; see http://ligand-expo.rcsb.org). The input format for\nthe  --ligand  format is  ResidueName,ChainID,ResidueNumber . However,\nin this particular case, (again, due to a ligand processing tool we used)\ndoes not have a chain ID assigned so that we leave the  ChainID  value\nempty. For example, if our ligand of interested was assigned the\nchain ID \"A\", we would have written  --ligand \"<0>,A,1\" .  Finally, via the  --apply_to_dir  flag, we specify that we want to apply\nthe  scripts/get-substructures.py  to all structures in the input directory\nso that we don't have to run the same script multiple times -- for instance,\nrunning it on each individual PDB file.  After running the script as described above, we should now find the following\nfiles in the specified output directory:   When we open these files in PyMOL, we should see the ligand and the\nrespective 9 Angstrom substructure of the protein -- the protein atoms\nthat fall within 9 Angstrom of the ligand's heavy atoms:   This is another excellent validation step to do to make sure that the\nright binding site region of the protein has been selected for the ligand\nof interest. After these substructures have been obtained, run the siteinterlock-score.py  script providing the substructure directory as input:  python scripts/siteinterlock-score.py \\\n-i examples/proflex_output/all-docking-poses-pdbs-9A/  As a result, we should now see the following SiteInterlock scores on\nyour command line terminal:   \n#\n# SiteInterlock version 1.0.0\n# Timestamp: 2016-08-19T21:56:56\n#\n# ==============================\n# SiteInterlock Scoring Results\n# ==============================\nFilename,SiteInterlock_Score\n1com_0057_pflex_in_flex_0001.pdb,-1.094\n1com_crystal_pflex_in_flex_0001.pdb,-1.053\n1com_0140_pflex_in_flex_0001.pdb,-0.357\n1com_0058_pflex_in_flex_0001.pdb,-0.087\n1com_0119_pflex_in_flex_0001.pdb,-0.070\n1com_1_0066_pflex_in_flex_0001.pdb,0.776\n1com_0130_pflex_in_flex_0001.pdb,1.885   These results are sorted by ascending order, and the  lowest, most negative\nvalue represents the best prediction.  Please also note that the\nSiteInterlock score is a score for ranking and pose selection. Due to the\nnormalization procedure that is required for combining protein and ligand\ninformation, the absolute values ( not their relative ranking order ) of\nthe scores depend on the number of docking poses.  Since this tutorial focuses on a protein with a crystallographically determined\norientation of the ligand, we can compare the positional accuracy of the\nSiteInterlock-selected pose with the crystallographic pose.  We do this by\ncomputing the root mean square deviation (RMSD) of atomic positions between\neach docking pose of prephenic acid and the crystal pose,  1com_crystal .\nIn this example we performed the RMSD calculation using the  rmsd  module of\nthe OEChem Toolkit (OpenEye Scientific Software, Santa Fe, NM;\nhttp://www.eyesopen.com). The following figure shows SiteInterlock scores\nof the docking poses plotted as a function of their RMSD values relative to\nthe crystallographic pose. The plot indicates that the docking with the\nmost negative SiteInterlock score has a low (good) RMSD value of 0.4 A\nrelative to the correct, crystallographic position (as expected), that\nthe crystallographic binding pose has a very similar, favorable\nSiteInterlock score, and that higher-RMSD binding poses typically\nhave higher/worse SiteInterlock scores.   We hope you find SiteInterlock useful in your own research!",
            "title": "4 - SiteInterlock Scoring and Pose Selection"
        },
        {
            "location": "/user_guide/index.html#references",
            "text": "Chook, Y. M., Gray, J. V., Ke, H., & Lipscomb, W. N. (1994).\nThe monofunctional chorismate mutase from Bacillus subtilis:\nstructure determination of chorismate mutase and its complexes\nwith a transition state analog and prephenate, and implications for the\nmechanism of the enzymatic reaction. Journal of molecular biology , 240(5), 476-500.  Hawkins, P. C., Skillman, A. G., Warren, G. L., Ellingson,\nB. A., & Stahl, M. T. (2010). Conformer generation with OMEGA:\nalgorithm and validation using high quality structures from the Protein\nDatabank and Cambridge Structural Database.  Journal of chemical information\nand modeling , 50(4), 572-584.  Trott, O., & Olson, A. J. (2010). AutoDock Vina: improving the speed\nand accuracy of docking with a new scoring function, efficient optimization,\nand multithreading.  Journal of computational chemistry , 31(2), 455-461.  Zavodszky, M. I., & Kuhn, L. A. (2005). Side\u2010chain flexibility in\nprotein\u2013ligand binding: The minimal rotation hypothesis. Protein Science , 14(4), 1104-1114.  Jacobs, D. J., Rader, A. J., Kuhn, L. A., & Thorpe, M. F. (2001).\nProtein flexibility predictions using graph theory.  Proteins: Structure,\nFunction, and Bioinformatics , 44(2), 150-165.  Raschka, S., Bemister-Buffington, J., & Kuhn, L. A. (2016).\n\"Detecting the Native Ligand Orientation by Interfacial\nRigidity: SiteInterlock.\"  Proteins: Structure, Function, and Bioinformatics ,\n85 (10).",
            "title": "References"
        },
        {
            "location": "/contact/index.html",
            "text": "Contact\n\n\nIf you encounter bugs or other technical issues with the \nsiteinterlock\n software package, please send an email to \nkuhnlab@msu.edu\n or use the \nIssue Tracker\n. Questions about the \nSiteInterlock research article\n about the research article, please contact the publisher or corresponding author instead.",
            "title": "Contact"
        },
        {
            "location": "/contact/index.html#contact",
            "text": "If you encounter bugs or other technical issues with the  siteinterlock  software package, please send an email to  kuhnlab@msu.edu  or use the  Issue Tracker . Questions about the  SiteInterlock research article  about the research article, please contact the publisher or corresponding author instead.",
            "title": "Contact"
        },
        {
            "location": "/changelog/index.html",
            "text": "Release Notes\n\n\n\n\nVersion 1.0.0\n\n\nDownload Links\n\n\n\n\nSource code (zip)\n\n\nSource code (tar.gz)\n\n\n\n\nNotes\n\n\n\n\nFirst release",
            "title": "Release Notes"
        },
        {
            "location": "/changelog/index.html#release-notes",
            "text": "",
            "title": "Release Notes"
        },
        {
            "location": "/changelog/index.html#version-100",
            "text": "",
            "title": "Version 1.0.0"
        },
        {
            "location": "/changelog/index.html#download-links",
            "text": "Source code (zip)  Source code (tar.gz)",
            "title": "Download Links"
        },
        {
            "location": "/changelog/index.html#notes",
            "text": "First release",
            "title": "Notes"
        },
        {
            "location": "/license/index.html",
            "text": "License\n\n\n\n\nGNU GENERAL PUBLIC LICENSE\n   Version 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n        Preamble\n\nThe GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\nTo protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\nSome devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n   TERMS AND CONDITIONS\n\n0. Definitions.\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\nThe Corresponding Source for a work in source code form is that\nsame work.\n\n2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n8. Termination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n END OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nsiteinterlock is a Python package for selecting near-native protein-ligand\ndocking poses based on the hypothesis that interfacial\nrigidification of both the protein and ligand prove to be\nimportant characteristics of the native binding mode and are\nsensitive to the spatial coupling of interactions and\nbond-rotational degrees of freedom in the interface.\n\nCopyright (C) 2016 Michigan State University.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\nsiteinterlock Copyright (C) 2016  Michigan State University\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n\nThe GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.",
            "title": "License"
        },
        {
            "location": "/license/index.html#license",
            "text": "GNU GENERAL PUBLIC LICENSE\n   Version 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n        Preamble\n\nThe GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\nTo protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\nSome devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n   TERMS AND CONDITIONS\n\n0. Definitions.\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\nThe Corresponding Source for a work in source code form is that\nsame work.\n\n2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n8. Termination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n END OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nsiteinterlock is a Python package for selecting near-native protein-ligand\ndocking poses based on the hypothesis that interfacial\nrigidification of both the protein and ligand prove to be\nimportant characteristics of the native binding mode and are\nsensitive to the spatial coupling of interactions and\nbond-rotational degrees of freedom in the interface.\n\nCopyright (C) 2016 Michigan State University.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\nsiteinterlock Copyright (C) 2016  Michigan State University\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n\nThe GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.",
            "title": "License"
        },
        {
            "location": "/cite/index.html",
            "text": "Citing SiteInterlock\n\n\nSiteInterlock is research software and should be cited when you use it in your research. Please use the citation information given below.\n\n\nBibTeX Entry\n\n\n@article{raschkas2016,\n  abstract = {...},\n  doi = {...},\n  author = {Raschka, Sebastian and Bemister-Buffington, Joseph and Kuhn, Leslie A.},\n  issn = {...},\n  journal = {Proteins: Structure, Function, and Bioinformatics},\n  month = {sep},\n  number = {10},\n  pages = {...},\n  publisher = {John Wiley & Sons},\n  title = {Detecting the Native Ligand Orientation by Interfacial Rigidity: SiteInterlock},\n  url = {...},\n  volume = {85},\n  year = {2016}\n}\n\n\n\n\nFormatted Citation Example\n\n\nRaschka, Sebastian, Joseph Bemister-Buffington, and Leslie A. Kuhn 2016. \"Detecting the Native Ligand Orientation by Interfacial Rigidity: SiteInterlock.\" \nProteins: Structure, Function, and Bioinformatics\n XX (X). John Wiley & Sons : XXX-XX. doi:xx.xxxx/xxxxxxxx.",
            "title": "Citing SiteInterlock"
        },
        {
            "location": "/cite/index.html#citing-siteinterlock",
            "text": "SiteInterlock is research software and should be cited when you use it in your research. Please use the citation information given below.",
            "title": "Citing SiteInterlock"
        },
        {
            "location": "/cite/index.html#bibtex-entry",
            "text": "@article{raschkas2016,\n  abstract = {...},\n  doi = {...},\n  author = {Raschka, Sebastian and Bemister-Buffington, Joseph and Kuhn, Leslie A.},\n  issn = {...},\n  journal = {Proteins: Structure, Function, and Bioinformatics},\n  month = {sep},\n  number = {10},\n  pages = {...},\n  publisher = {John Wiley & Sons},\n  title = {Detecting the Native Ligand Orientation by Interfacial Rigidity: SiteInterlock},\n  url = {...},\n  volume = {85},\n  year = {2016}\n}",
            "title": "BibTeX Entry"
        },
        {
            "location": "/cite/index.html#formatted-citation-example",
            "text": "Raschka, Sebastian, Joseph Bemister-Buffington, and Leslie A. Kuhn 2016. \"Detecting the Native Ligand Orientation by Interfacial Rigidity: SiteInterlock.\"  Proteins: Structure, Function, and Bioinformatics  XX (X). John Wiley & Sons : XXX-XX. doi:xx.xxxx/xxxxxxxx.",
            "title": "Formatted Citation Example"
        }
    ]
}